////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2020 Xiaomi Technologies, Inc.
// All Rights Reserved.
// Confidential and Proprietary - Xiaomi Technologies, Inc.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @file   miapostproctypeintf.h
/// @brief  offline postproc interfaces defination
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef __MI_POSTPROC_INTF__
#define __MI_POSTPROC_INTF__

#include "MiaPostProcType.h"

namespace mialgo2 {

#ifdef __cplusplus
extern "C" {
#endif // __cplusplus

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  APIs
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// MiaPostProc_Create
///
/// @brief  Function to create the encoder instance
///
/// @param  pParams   CreateParams Ptr
///
/// @return Encoder Pointer
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
MIA_VISIBILITY_PUBLIC void *MiaPostProc_Create(MiaCreateParams *params);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// MiaPostProc_PreProcess
///
/// @brief  Function to Pre-Process, especially to get the algorithm ready
///
/// @param  postProcInstance   Postproc instance that is created, get from stacked sessions if null
/// @param  preParams          Ptr to pre-process params
///
/// @return CDKResult
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CDKResult MiaPostProc_PreProcess(void *postProcInstance, MiaPreProcParams *preParams);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// MiaPostProc_Process
///
/// @brief  Function to encode the input and update output handle
///
/// @param  pPostProcInstance   Postproc instance that is created
/// @param  pSessionParams      Ptr to session params
///
/// @return CDKResult
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
MIA_VISIBILITY_PUBLIC CDKResult MiaPostProc_Process(void *postProcInstance,
                                                    MiaProcessParams *sessionParams);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// MiaPostProc_Flush
///
/// @brief  Function to flush process
///
/// @param  pPostProcInstance   Postproc instance that is created
/// @param  isForced  whether force termination pending task
///
/// @return CDKResult
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
MIA_VISIBILITY_PUBLIC CDKResult MiaPostProc_Flush(void *postProcInstance, bool isForced);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// MiaPostProc_Destroy
///
/// @brief  Function to destroy the postproc instance
///
/// @param  pPostProcInstance  Postproc instance that is created
///
/// @return None
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
MIA_VISIBILITY_PUBLIC void MiaPostProc_Destroy(void *postProcInstance);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// MiaPostProc_QuickFinish
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
MIA_VISIBILITY_PUBLIC QFResult MiaPostProc_QuickFinish(void *postProcInstance,
                                                       QuickFinishMessageInfo &messageInfo);

#ifdef __cplusplus
}
#endif // __cplusplus

} // namespace mialgo2

#endif // __MI_POSTPROC_INTF__
